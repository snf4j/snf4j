# 
# CI build that assembles artifacts and runs tests.
#
# USAGE:
# - to skip CI add [skip ci] to the commit message
#
name: CI

on:
  push:
    branches: [ master ]
    tags: [v*]
  pull_request:
    branches: [ master ]

jobs:
  build:    
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"

    strategy:
      matrix:
        java: [8, 11]
        
    env:
      SNF4J_SKIP_TEST_LOGGING: true
      SNF4J_UNIX_TEST: true
      
    steps:
    - name: Check out code    
      uses: actions/checkout@v4
      
    - name: Install packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libsctp-dev
        version: 1.0
          
    - name: Set up Java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        
    - name: Install dependencies
      run: |
        mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
    
    - name: Build on Java ${{ matrix.java }}
      run: |
        mvn -B test
        
    - name: Log failure reports
      if: ${{ failure() }}
      run: |
        cat snf4j-core/target/surefire-reports/*.txt
        cat snf4j-core-log4j2/target/surefire-reports/*.txt
        cat snf4j-core-slf4j/target/surefire-reports/*.txt
        cat snf4j-sctp/target/surefire-reports/*.txt
        cat snf4j-websocket/target/surefire-reports/*.txt
        cat snf4j-tls/target/surefire-reports/*.txt
    
    - name: Upload coverage to Codecov
      if: matrix.java == 8
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: false
        
  release:    
    runs-on: ubuntu-latest
    needs: [build]
    
    if: github.event_name == 'push'
        && startsWith(github.ref, 'refs/tags/v')
        && github.repository == 'snf4j/snf4j'
        && !contains(toJSON(github.event.commits.*.message), '[skip release]')

    steps:
    - name: Check out code    
      uses: actions/checkout@v4

    - name: 2. Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 8
        server-id: ossrh
        server-username: NEXUS_TOKEN_USER
        server-password: NEXUS_TOKEN_PWD
        gpg-private-key: ${{ secrets.PGP_KEY }}
        gpg-passphrase: PGP_PWD

    - name: Publish to Apache Maven Central
      run: mvn deploy -DskipTests=true -P release
      env:
        NEXUS_TOKEN_USER: ${{ secrets.NEXUS_TOKEN_USER }}
        NEXUS_TOKEN_PWD: ${{ secrets.NEXUS_TOKEN_PWD }}
        PGP_PWD: ${{ secrets.PGP_PWD }}
